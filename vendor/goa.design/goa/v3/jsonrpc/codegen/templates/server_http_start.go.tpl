{{ comment "handleHTTPServer starts configures and starts a HTTP server on the given URL. It shuts down the server if any error is received in the error channel." }}
func handleHTTPServer(ctx context.Context, u *url.URL{{ range $.Services }}{{ if .Service.Methods  }}, {{ .Service.VarName }}Endpoints *{{ .Service.PkgName }}.Endpoints{{ end }}{{ end }}{{ range $.JSONRPCServices }}{{- $serviceName := .Service.Name }}{{- $found := false }}{{- range $.Services }}{{- if eq .Service.Name $serviceName }}{{- $found = true }}{{- break }}{{- end }}{{- end }}{{ if not $found }}, {{ .Service.VarName }}Svc {{ .Service.PkgName }}.Service, {{ .Service.VarName }}Endpoints *{{ .Service.PkgName }}.Endpoints{{ else }}, {{ .Service.VarName }}Svc {{ .Service.PkgName }}.Service{{ end }}{{ end }}, wg *sync.WaitGroup, errc chan error, dbg bool) {