// Code generated by goa v3.2.0, DO NOT EDIT.
//
// resource client
//
// Command:
// $ goa gen github.com/tektoncd/hub/api/design

package resource

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "resource" service client.
type Client struct {
	QueryEndpoint goa.Endpoint
	ListEndpoint  goa.Endpoint
}

// NewClient initializes a "resource" service client given the endpoints.
func NewClient(query, list goa.Endpoint) *Client {
	return &Client{
		QueryEndpoint: query,
		ListEndpoint:  list,
	}
}

// Query calls the "Query" endpoint of the "resource" service.
func (c *Client) Query(ctx context.Context, p *QueryPayload) (res ResourceCollection, err error) {
	var ires interface{}
	ires, err = c.QueryEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(ResourceCollection), nil
}

// List calls the "List" endpoint of the "resource" service.
func (c *Client) List(ctx context.Context, p *ListPayload) (res ResourceCollection, err error) {
	var ires interface{}
	ires, err = c.ListEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(ResourceCollection), nil
}
